// Code generated by goctl. DO NOT EDIT.
package types

type UserInfoResp struct {
	Code    int64        `json:"code"`
	Message string       `json:"message"`
	Data    UserInfoData `json:"data"`
}

type UserInfoData struct {
	Avatar      string             `json:"avatar"`
	Name        string             `json:"name"`
	MenuTree    []*ListMenuTree    `json:"menuTree"`
	MenuTreeVue []*ListMenuTreeVue `json:"menuTreeVue"`
	ResetPwd    bool               `json:"resetPwd,default=false"`
}

type ListMenuTree struct {
	Id       int64  `json:"id"`
	Path     string `json:"path"`
	Name     string `json:"name"`
	ParentId int64  `json:"parentId"`
	Icon     string `json:"icon"`
}

type ListMenuTreeVue struct {
	Id           int64        `json:"id"`
	ParentId     int64        `json:"parentId"`
	Title        string       `json:"title"`
	Path         string       `json:"path"`
	Name         string       `json:"name"`
	Icon         string       `json:"icon"`
	VueRedirent  string       `json:"vueRedirent"`
	VueComponent string       `json:"vueComponent"`
	Meta         MenuTreeMeta `json:"meta"`
}

type MenuTreeMeta struct {
	Title string `json:"title"`
	Icon  string `json:"icon"`
}

type AddUserReq struct {
	Name     string `json:"name"`
	NickName string `json:"nickName"`
	Password string `json:"password,optional"`
	Email    string `json:"email"`
	RoleId   int64  `json:"roleId"`
	Status   int64  `json:"status,default=1"`
}

type AddUserResp struct {
	Code    int64           `json:"code"`
	Message string          `json:"message"`
	Data    ReceiptUserData `json:"data"`
}

type ReceiptUserData struct {
	Id int64 `json:"id"`
}

type ApiRedisReq struct {
	Name     string `json:"name"`
	NickName string `json:"nickName"`
	Password string `json:"password,optional"`
	Email    string `json:"email"`
}

type ApiRedisResp struct {
	Code    int64       `json:"code"`
	Message string      `json:"message"`
	Data    ApiRedisReq `json:"data"`
}

type ApiRedisGetReq struct {
	Key string `form:"key"`
}

type ApiKafkaReq struct {
	Name     string `json:"name"`
	NickName string `json:"nickName"`
	Password string `json:"password"`
	Email    string `json:"email"`
}

type ApiKafkaResp struct {
	Code    int64       `json:"code"`
	Message string      `json:"message"`
	Data    ApiKafkaReq `json:"data"`
}

type ApiClickhouseReq struct {
	Name     string `json:"name"`
	NickName string `json:"nickName"`
	Password string `json:"password,optional"`
	Email    string `json:"email"`
}

type ApiClickhouseResp struct {
	Code    int64            `json:"code"`
	Message string           `json:"message"`
	Data    ApiClickhouseReq `json:"data"`
}

type ApiClickhouseGetReq struct {
	Key string `form:"key"`
}

type ExcelImportReq struct {
	DeptId string      `json:"deptId"`        // 部门id（Content-Type: form-data）
	File   interface{} `json:"file,optional"` // excel文件（Content-Type: form-data）
}

type ExcelImportData struct {
	Total   int64  `json:"total"`   // 导入总数
	Success int64  `json:"success"` // 导入成功数
	Msg     string `json:"msg"`     // 提示信息
}

type ExcelImportResp struct {
	Code    int64           `json:"code"`
	Message string          `json:"message"`
	Data    ExcelImportData `json:"data"`
}

type ExcelExportlReq struct {
	TimeStart string `form:"timeStart,optional"` // 时间（开始） yyyy-mm-dd
	TimeEnd   string `form:"timeEnd,optional"`   // 时间（结束） yyyy-mm-dd
}

type DefaultResponse struct {
	Code    int64  `json:"code,default=200"`
	Message string `json:"message,default=操作成功"`
}

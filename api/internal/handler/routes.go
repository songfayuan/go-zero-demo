// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"

	clickhousetest "go-zero-demo/api/internal/handler/clickhouse/test"
	exceltest "go-zero-demo/api/internal/handler/excel/test"
	kafkatest "go-zero-demo/api/internal/handler/kafka/test"
	redistest "go-zero-demo/api/internal/handler/redis/test"
	sysuser "go-zero-demo/api/internal/handler/sys/user"
	"go-zero-demo/api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/currentUser",
				Handler: sysuser.UserInfoHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: sysuser.UserAddHandler(serverCtx),
			},
		},
		rest.WithPrefix("/sys/user"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/redisAdd",
				Handler: redistest.RedisAddHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/redisDelete",
				Handler: redistest.RedisDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/redisUpdate",
				Handler: redistest.RedisUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/redisGet",
				Handler: redistest.RedisGetHandler(serverCtx),
			},
		},
		rest.WithPrefix("/redis/test"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/kafkaProducer",
				Handler: kafkatest.KafkaProducerHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/kafkaConsumer",
				Handler: kafkatest.KafkaConsumerHandler(serverCtx),
			},
		},
		rest.WithPrefix("/kafka/test"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/clickhouseAdd",
				Handler: clickhousetest.ClickhouseAddHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/clickhouseDelete",
				Handler: clickhousetest.ClickhouseDeleteHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/clickhouseUpdate",
				Handler: clickhousetest.ClickhouseUpdateHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/clickhouseGet",
				Handler: clickhousetest.ClickhouseGetHandler(serverCtx),
			},
		},
		rest.WithPrefix("/clickhouse/test"),
	)

	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/excel/templateDownload",
				Handler: exceltest.ExcelTemplateDownloadHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/excel/excelImport",
				Handler: exceltest.ExcelImportHandler(serverCtx),
			},
			{
				Method:  http.MethodGet,
				Path:    "/excel/excelExport",
				Handler: exceltest.ExcelExportHandler(serverCtx),
			},
		},
		rest.WithPrefix("/excel/test"),
	)
}
